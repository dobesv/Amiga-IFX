####################################################
#                                                  #
# IFX.ids                                          #
#                                                  #
####################################################
#
# About editing IFX's ids:
# ------------------------
# To set up an event, use the format:
#
# <TYPE OF ACTION> <EVENT NAME> <ACTION DATA>
#
# For example:
# SPEECH tcp_ip "Welcome to the net!"
# would say, usig the Amiga's internal voice, "Welcome to the net!"
# Note that if any part of this has spaces in it, you must put quotes
# around it, or IFX will get confused.
#
# The different types of Actions are:
#      Sound   - Load and play the sound whose filepath is in <ACTION DATA>
#      PSound  - Like Sound, but the sound is only loaded once, on startup
#      Speech  - Use the Amiga's voice to say whatever is in <ACTION DATA>
#                (Note: Use quotes if there is spaces or punctuation in your string!>
#      Exec    - Runs the command line in <ACTION DATA> as if it were from a CLI
#      Message - Give the user a text message, in a little requester
#      Other   - Instead of using one of this ID's actions, use one of <ACTION DATA>'s
#      Nothing - Do nothing.
#
# The event name can be anything you like, and you can put as many actions on the
# same event as you like; One will be randomly picked from out of them.
#
# For a list of commonly used event names, from both IFX and ARQ, look in IFX.guide,
# or download an example sound set, which will have all the common ID's in it.
#
# Note that any events that happen, but have not been defined, will be ignored.
#
# About Task Exclusion
# --------------------
# There are some programs that you don't want to play sounds.  Some people have said
# they only want window noises for the WorkBench, nothing else.  All those sounds can
# get to be a headache!
#
# Anyway, to exclude a task, or group of tasks, use the format:
# EXCLUDE <TASK PATTERN>
#
# <TASK PATTERN> represents a standard DOS pattern.  For example,
#
# EXCLUDE AMFTP.?
#
# will exclude AMFTP.1, AMFTP.2, AMFTP.a, AMFTP.z.
#
# Another useful exclusion is:
#
# EXCLUDE ~(Workbench)
#
# This will exclude all tasks from window/screen sounds EXCEPT the workbench.  I don't
# personally use this, but some people really don't like all those annoying extra sounds
# for all programs, so this fills their need nicely.  if you only want a select few tasks,
# you can use:
#
# EXCLUDE ~(Workbench|ScalOS|DOpus#?)
#
# This excludes all programs except Workbenchm ScalOS, and DOpus.
#
# Notez Biene!  The disk inserted/removed events are generated by input.device,
# so to avoid removing this from your list, put:
#
# EXCLUDE ~(Workbench|input.device|...)
#
# When you only want specific tasks AND disk inserted/removed events.
#
# Chiming
# -------
# To turn chiming on, use:
# CHIMES
#
# To turn chiming off (if it is turned on before, or in the icon), use:
# NOCHIMES
#
# Note that whatever state the chiming is in in the last CHIMES or NOCHIMES is the
# state that will be used.
#
# Directories
# -----------
# If you don't keep your sounds in the same place as the IFX executable (which you
# probably don't), you can use the DEFPREFSDIR command to change directories.  It
# is called DEFPREFSDIR for historical reason, having to do with the preferences
# editor.
# The reason you use DEFPREFSDIR is so that you don't have to type full paths anymore.
#
# For example:
# DEFPREFSDIR Sys:Prefs/Sounds
# Sound  startup_complete Startup_completed       -> This will become
#                                                 -> SYS:Prefs/Sounds/STartup_completed
# PSound open_window      Winsnds/open            -> This will become
#                                                 -> SYS:prefs/Sounds/Winsnds/open
# DEFPREFSDIR Sounds:
# Speech tcp_ip "Connection negotiated."          -> Trick!  Not affected.
# Sound  tcp_ip ReBoot/I_live_in_the_web          -> Sounds:ReBoot/I_live_in_the_web
#
# Multiple Config files
# ---------------------
# On my system, I have divided all my sounds into categories, each in their own directory,
# and each with their own IDS file (this file).  If you want to do this, just make all
# your IDs files, and put:
#
# DEFPREFSDIR <full path to sounds>
# INCLUDE <Path to IDS file>
#
# in S:IFX.ids, and you can then, in the IDS file, treat each sound as if it were in the current
# directory.
#
# For example:
# DefPrefDir Sounds:ReBoot/
# Include IFX.ids
# DefPrefsDir Sys:prefs/sounds
# Include S:System.ids
#
# Be careful: INCLUDE is NOT the opposite of EXCLUDE!  i used INCLUDE, because it is like
#             #include from C (even though I wrote this in E)
#
# Note that while you don't HAVE to end config files with ".ids", I'd recommend it,
# to avoid confusion with some other type of file.
#
# Comments
# --------
# As you may have noticed, I've been starting each line of this file with a pound sign ("#").
# IFX will ignore any line starting with this symbol, as well as any of these lines:
$
%
&
*
(
)
-
etc.
etc.
# I use the pound sign because it is sort-of a standard, but IFX will ignore anything it does not
# recognize, regardless of what it is.  As long as the first word isn't a valid type or command,
# then IFX will skip it.  Thus:
Szznd
Take a chill-pill, man!
And also:
Sounding happy
^^^^^ This doesn't matter, because it's only PART of the word.
#
#
# Your commands & actions start here:
#

